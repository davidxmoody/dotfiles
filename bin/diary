#!/usr/bin/env bash

set -e

if [[ ! -d "$DIARY_DIR" ]]; then
  echo "\$DIARY_DIR does not exist" >&2
  exit 1
fi

cd "$DIARY_DIR"

diary_new() {
  subdir="entries/$(date +%Y/%m/%d)"
  filename="diary-$(date +%H-%M).md"
  mkdir -p "$subdir"

  nvim "+:ZenMode" "+norm a## " "+startinsert!" "$subdir/$filename"

  rmdir --ignore-fail-on-non-empty "$subdir"
}

diary_edit() {
  last_year=$(ls -r "entries" | head -n1)
  last_month=$(ls -r "entries/$last_year" | head -n1)
  last_day=$(ls -r "entries/$last_year/$last_month" | head -n1)
  last_entry=$(ls -r "entries/$last_year/$last_month/$last_day" | head -n1)

  nvim "entries/$last_year/$last_month/$last_day/$last_entry"
}

diary_fzf_show_provided() {
  terminal_width=$(tput cols)
  preview_width=$((terminal_width - 41))

  terminal_height=$(tput lines)
  before_context=$(((terminal_height - 2) / 3))
  after_context=$((terminal_height - 2 - 1 - before_context))

  selected=$(fzf --preview-window=right:$preview_width --preview 'fmt -s --width=$COLUMNS {} | rg --color=always --before-context='$before_context' --after-context='$after_context' "'"$1"'"')

  [[ -n "$selected" ]] && nvim "$selected"
}

diary_list() {
  last_year=$(ls -r "entries" | head -n1)
  sorted_files=$(rg --files "entries/$last_year" | sort -r)
  diary_fzf_show_provided <<< "$sorted_files"
}

diary_search() {
  rg -l --sortr path "$1" "entries" | diary_fzf_show_provided "$@"
}

diary_backup() {
  local commit="$(git rev-parse --short HEAD)"
  local backup_file="$ICLOUD_DIR/Documents/diary-backups/diary-backup-$(date +%F)-$commit.zip"

  if [[ -f "$backup_file" ]]; then
    echo "Backup file already exists: '$backup_file'" >&2
    exit 1
  fi

  cd "$(dirname "$DIARY_DIR")"
  zip -re "$backup_file" "$(basename "$DIARY_DIR")/.git"

  echo
  echo "Created backup file: '$backup_file'"
  echo "Total size: $(du -h "$backup_file" | cut -f1)"
}

command=$1
shift

case "$command" in
  new)
    diary_new "$@"
    ;;
  edit)
    diary_edit "$@"
    ;;
  list)
    diary_list "$@"
    ;;
  search)
    diary_search "$@"
    ;;
  backup)
    diary_backup "$@"
    ;;
  *)
    echo "commands: new|edit|list|search|backup" >&2
    exit 1
    ;;
esac
