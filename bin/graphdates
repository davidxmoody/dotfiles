#!/usr/bin/env node

const moment = require("moment")
const getStdin = require("get-stdin")
const chalk = require("chalk")

function fillDates(providedDates) {
  const filled = []
  const iteratorDate = moment(providedDates[0])
  do {
    filled.push({
      date: iteratorDate.format("YYYY-MM-DD"),
      display: iteratorDate.format("YYYY-MM-DD dd").replace(/Sa|Su/, (match) => chalk.red(match)),
    })
    iteratorDate.add(1, "day")
  } while (!iteratorDate.isAfter(providedDates[providedDates.length - 1]))
  return filled
}

getStdin().then((json) => {
  const data = JSON.parse(json)
  const providedDates = Object.keys(data).sort()
  if (!providedDates.length) {
    throw new Error("Not enough dates provided")
  }

  const filledDates = fillDates(providedDates)
  const maxValue = Math.max(...Object.values(data))

  filledDates.forEach(({date, display}) => {
    const value = Math.max(0, data[date] || 0)
    const numMarks = Math.floor(80 * value / maxValue)
    console.log(display, "#".repeat(numMarks))
  })

  console.log(`\n${providedDates.length}/${filledDates.length} days have data, max value is ${maxValue}`)
}).catch(console.error)
