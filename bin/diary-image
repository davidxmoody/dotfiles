#!/usr/bin/env python3

import sys
import os
import shutil
from datetime import date, datetime
from pathlib import Path
import re
import subprocess


def parse_date(date_str: str) -> date:
    try:
        return datetime.strptime(date_str, "%Y-%m-%d").date()
    except ValueError:
        print(f"Invalid date format: {date_str}. Expected YYYY-MM-DD.")
        sys.exit(1)


def copy_to_clipboard(text: str):
    try:
        subprocess.run("pbcopy", input=text.encode(), check=True)
    except Exception as e:
        print(f"Failed to copy to clipboard: {e}")


def main():
    if len(sys.argv) < 2 or len(sys.argv) > 3:
        print("Usage: python3 move_image.py <image-file> [YYYY-MM-DD]")
        sys.exit(1)

    input_path = Path(sys.argv[1])
    if not input_path.is_file():
        print(f"File does not exist: {input_path}")
        sys.exit(1)

    use_date = parse_date(sys.argv[2]) if len(sys.argv) == 3 else date.today()

    diary_dir = os.environ.get("DIARY_DIR")
    if not diary_dir:
        print("Environment variable DIARY_DIR is not set.")
        sys.exit(1)
    diary_dir = Path(diary_dir)

    target_dir = diary_dir / "images" / use_date.strftime("%Y/%m/%d")
    target_dir.mkdir(parents=True, exist_ok=True)

    ext = input_path.suffix  # includes the dot, e.g., ".png"

    existing = list(target_dir.glob(f"image-*{ext}"))
    numbers = []
    for f in existing:
        match = re.match(rf"image-(\d+){re.escape(ext)}$", f.name)
        if match:
            numbers.append(int(match.group(1)))
    next_num = (max(numbers) + 1) if numbers else 1

    new_name = f"image-{next_num:02d}{ext}"
    dest_path = target_dir / new_name
    shutil.move(str(input_path), dest_path)

    rel_path = Path("/images") / use_date.strftime("%Y/%m/%d") / new_name
    markdown_link = f"![]({rel_path})"
    print(markdown_link)

    if sys.platform == "darwin":
        copy_to_clipboard(markdown_link)


if __name__ == "__main__":
    main()
