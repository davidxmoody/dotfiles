# Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet fun "Function"
function ${1:fn}($2) {
	${VISUAL}$3
}
endsnippet

snippet fn "Arrow function"
($1) => {
	${VISUAL}$2
}
endsnippet

# Imports ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet im "Import"
import ${1:module_name} from "${2:module_path}"
endsnippet

snippet imr "Import React"
import * as React from "react"
endsnippet

snippet imm "Import moment"
import * as moment from "moment"
endsnippet

snippet ims "Import styled-components"
import styled from "styled-components"
endsnippet

snippet imsn "Import RN styled-components"
import styled from "styled-components/native"
endsnippet

snippet ex "Export default"
export default $1
endsnippet

# Console ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet cl "console.log()"
;(console).log(${1:"${2:message}"})
endsnippet

snippet cw "console.warn()"
;(console).warn(${1:"${2:message}"})
endsnippet

snippet ce "console.error()"
;(console).error(${1:"${2:message}"})
endsnippet

# Misc ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet int "Interface"
interface ${1:InterfaceName} {
	$2
}
endsnippet

snippet describe "mocha describe"
describe("$1", () => {
	$2
})
endsnippet

snippet it "mocha it"
it("$1", () => {
	$2
})
endsnippet

snippet ita "mocha async it"
it("$1", async () => {
	$2
})
endsnippet

snippet notnull "not null function"
function notNull<X>(maybeNull: X | null): maybeNull is X {
	return maybeNull !== null
}
endsnippet

# Styled components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet stc "HTML styled component"
const ${1:Container} = styled.${2:div}\`
	$3
\`
endsnippet

snippet stn "RN styled component"
const ${1:Container} = styled.${2:View}({
	$3
})
endsnippet

# React ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet react "React pure class component"
import * as React from "react"

interface Props {
	${2:// TODO}
}

export default class ${1:ComponentName} extends React.PureComponent<Props> {
	public render() {
		return (
			${3:<div>TODO</div>}
		)
	}
}
endsnippet

snippet reacts "React pure class component with state"
import * as React from "react"

interface Props {
	${2:// TODO}
}

interface State {
	${3:// TODO}
}

export default class ${1:ComponentName} extends React.PureComponent<Props, State> {
	public state: State = {
		${4:// TODO}
	}

	public render() {
		return (
			${3:<div>TODO</div>}
		)
	}
}
endsnippet

# JSON stringify/parse ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet js "JSON stringify"
JSON.stringify(${1})
endsnippet

snippet j2 "JSON stringify null 2"
JSON.stringify(${1}, null, 2)
endsnippet

snippet jp "JSON parse"
JSON.parse(${1})
endsnippet
