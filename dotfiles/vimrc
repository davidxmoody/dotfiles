" Setup Vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/vundle'

Plugin 'tpope/vim-repeat'
Plugin 'scrooloose/nerdtree'
Plugin 'altercation/vim-colors-solarized'
Plugin 'kchmck/vim-coffee-script'
Plugin 'AndrewRadev/vim-eco'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-speeddating'
Plugin 'pangloss/vim-javascript'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'mtscout6/vim-cjsx'
Plugin 'mxw/vim-jsx'
Plugin 'elzr/vim-json'
Plugin 'raichoo/purescript-vim'
Plugin 'leafgarland/typescript-vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'

" Syntastic
Plugin 'scrooloose/syntastic'
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_json_checkers = ['jsonlint']
au! BufRead,BufNewFile *.json set filetype=json
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0


" Search highlighting
Plugin 'haya14busa/incsearch.vim'
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map j  <Plug>(incsearch-nohl-n)
map J  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map g* <Plug>(incsearch-nohl-g*)
map #  <Nop>
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

" Completion
Plugin 'Valloric/YouCompleteMe'
let g:ycm_filetype_blacklist = { 'md': 1, 'mkd': 1, 'markdown': 1, 'text': 1 , 'gitcommit': 1 }

" Bracket expansion
Plugin 'Raimondi/delimitMate'
set backspace=indent,eol,start
let delimitMate_expand_cr = 1
let delimitMate_nesting_quotes = ['"',"'",'`']

" EasyMotion
Plugin 'Lokaltog/vim-easymotion'

" Emmet for expanding html stuff
Plugin 'mattn/emmet-vim'
nnoremap <C-F> <Nop>
inoremap <C-F> <Nop>
vnoremap <C-F> <Nop>
let g:user_emmet_leader_key='<C-F>'

" Markdown syntax highlighting
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1
let g:markdown_no_default_key_mappings=1
let g:vim_markdown_frontmatter=1

" End of Vundle setup
call vundle#end()
filetype plugin indent on
syntax on

" Open new files in insert mode
au BufNewFile * startinsert

" Miscellaneous 
set ruler
set autoread
set ignorecase
set smartcase
set report=0
set scrolloff=4
set sidescrolloff=1
set listchars=extends:>,precedes:<
set directory=~/.vim-swap,~/tmp,/var/tmp,/tmp,.
set clipboard=unnamedplus
set nojoinspaces
set number
set showcmd

" '.' in visual mode repeats the last change on every line
vnoremap . :norm.<CR>

" Auto wrap comments
set textwidth=79
set formatoptions=crqn1j

" New way to exit normal mode
nmap + <Nop>
imap + <Esc>s
vmap + <Esc><Esc>
imap  <Nop>

nnoremap ; :

noremap + :update<CR>
noremap ## ZZ

imap  <Nop>
inoremap ! 

noremap _ :lfirst<CR>
noremap \| :lnext<CR>

" Some custom navigation bindings
noremap <Space> A
noremap <CR> o
noremap - o-<Space>

noremap M <Nop>
noremap S <Nop>
noremap H <Nop>

" Indenting
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
set autoindent

" No wrapping
set nowrap

" Navigation with htns
"TODO: remap these keys with the onoremap command too
noremap t j
noremap n k
noremap s l

noremap T 
noremap N 
noremap S L

noremap gt gj
noremap gn gk

"noremap j n
noremap k J
noremap l t

"noremap J N
noremap K gJ
noremap L T

" gf filename options
set suffixesadd=.js,.json,.coffee,.jsx,.cjsx,.yml,.yaml,.scss,.css

" Function for editing Python code
func! PythonMode()
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
endfu
au BufNewFile,BufRead *.py call PythonMode()

" Disable syntastic for cjsx (but not regular coffee files)
func! DisableSyntastic()
  set cmdheight=2
  SyntasticToggleMode
  set cmdheight=1
endfu
au BufNewFile,BufRead *.cjsx call DisableSyntastic()

set spellfile=~/sync/diary-data/vim/en.utf-8.add

" Function for editing English text
func! WordProcessorMode()
  " Load Markdown syntax highlighting but with custom hashtag support
  set filetype=mkd
  syn match htmlBoldItalic "#[-_a-zA-Z0-9]\+"

  " Other options
  set nonumber
  set wrap
  set linebreak
  set breakat=\ 
  set display=lastline
  set formatoptions=
  set spell spelllang=en_gb
  source ~/.vim_abbreviations

  " Indenting
  setl tabstop=4
  setl softtabstop=0
  setl shiftwidth=4
  setl expandtab
  setl nosmarttab
  setl noautoindent
  setl nocindent
  setl nosmartindent
  setl indentexpr=

  " Auto-capitalize script
  augroup SENTENCES
    au!
    autocmd InsertCharPre * if search('\v(%^|%^[1-7]{2}\s|[.!?]\_s+|\_^\s*\-\s|\_^#+\s|\_^title\:\s|\n\n)%#', 'bcnw') != 0 | let v:char = toupper(v:char) | endif
  augroup END
endfu

com! WP call WordProcessorMode()
au BufNewFile,BufRead *.md call WordProcessorMode()
au BufNewFile,BufRead diary-*.txt call WordProcessorMode()
