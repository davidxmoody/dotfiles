" Setup Vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

Bundle 'scrooloose/nerdtree'
Bundle 'altercation/vim-colors-solarized'
Bundle 'kchmck/vim-coffee-script'
Bundle 'AndrewRadev/vim-eco'
Bundle 'tpope/vim-abolish'

" Emmet for expanding html stuff
Bundle "mattn/emmet-vim"
nnoremap <C-F> <Nop>
inoremap <C-F> <Nop>
vnoremap <C-F> <Nop>
let g:user_emmet_leader_key='<C-F>'

" Setup Markdown syntax highlighting
Bundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1
"let g:vim_markdown_initial_foldlevel=1
let g:markdown_no_default_key_mappings=1

" End of Vundle setup
syntax on
filetype plugin indent on

"set background=dark
"colorscheme solarized

" Open new files in insert mode
au BufNewFile * startinsert

" Miscellaneous 
set ruler
set autoread
set ignorecase
set smartcase
set report=0
set scrolloff=4
set sidescrolloff=1
set listchars=extends:>,precedes:<
set directory=~/tmp,/var/tmp,/tmp,.
set clipboard=unnamedplus
set nojoinspaces
set number
set showcmd

" Trying out new way to exit normal mode
"nmap + <Nop>
"imap + <Esc>s
"vmap + <Esc><Esc>

" '.' in visual mode repeats the last change on every line
vnoremap . :norm.<CR>

" Auto wrap comments
set textwidth=79
set formatoptions=crqn1j

" Some custom navigation bindings
noremap <Space> A
noremap <CR> o
noremap - o-<Space>
inoremap <C-B> <ESC>b
inoremap <C-Space> <ESC>A

" Quick way to save and/or exit from insert mode
inoremap MM <ESC>ZZ
noremap MM ZZ
inoremap HH <ESC>:update<CR>
noremap HH :update<CR>
noremap M <Nop>
noremap S <Nop>
noremap H <Nop>

" Tabs and indenting
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
set autoindent

" No wrapping
set nowrap

" Navigation with htns
"TODO: remap these keys with the onoremap command too
noremap t j
noremap n k
noremap s l

noremap T 
noremap N 
noremap S L

noremap gt gj
noremap gn gk

noremap j n
noremap k J
noremap l t

noremap J N
noremap K gJ
noremap L T

" n is next and prev search results
" t is until
" s is substitute
" J is join
" K is lookup keyword

" Function for editing Python code
func! PythonMode()
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
endfu
au BufNewFile,BufRead *.py call PythonMode()

" Function for editing English text
func! WordProcessorMode()
  " Load Markdown syntax highlighting but with custom hashtag support
  set filetype=mkd
  syn match htmlBoldItalic "#[-_a-zA-Z0-9]\+"

  " Other options
  set nonumber
  set wrap
  set linebreak
  set breakat=\ 
  set display=lastline
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
  set formatoptions=
  set spell spelllang=en_gb
  source ~/.vim/abbreviations.vim

  " Auto-capitalize script
  augroup SENTENCES
    au!
    autocmd InsertCharPre * if search('\v(%^|%^[1-7]{2}\s|[.!?]\_s+|\_^\-\s|\_^title\:\s|\n\n)%#', 'bcnw') != 0 | let v:char = toupper(v:char) | endif
  augroup END
endfu

com! WP call WordProcessorMode()
au BufNewFile,BufRead *.mkd call WordProcessorMode()
au BufNewFile,BufRead *.md call WordProcessorMode()
au BufNewFile,BufRead diary-*.txt call WordProcessorMode()
